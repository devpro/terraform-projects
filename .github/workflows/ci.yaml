# actions: ["https://github.com/marketplace/actions/checkov-github-action", "https://github.com/marketplace/actions/setup-tflint", "https://github.com/marketplace/actions/tfsec-action"]

name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build-test:
    name: Code analysis
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      # info: Checkov is a static code analysis tool for infrastructure as code (IaC) and also a software composition analysis (SCA) tool for images and open source packages (ref. https://github.com/bridgecrewio/checkov)
      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          soft_fail: true
          output_format: cli,sarif
          output_file_path: console,results.sarif
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        if: success() || failure()
        with:
          sarif_file: results.sarif
      # info: tfsec uses static analysis of your terraform code to spot potential misconfigurations (ref. https://github.com/aquasecurity/tfsec)
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: true
      # info: TFLint is a pluggable terraform linter (ref. https://github.com/terraform-linters/tflint)
      - name: Cache plugin dir
        uses: actions/cache@v3
        with:
          path: ~/.tflint.d/plugins
          key: tflint-${{ hashFiles('.tflint.hcl') }}
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          # hint: container image version (ref. https://github.com/terraform-linters/tflint/pkgs/container/tflint)
          tflint_version: v0.47.0
      - name: Initialize TFLint
        run: tflint --init
        env:
          # tip: avoids rate limiting (ref. https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting)
          GITHUB_TOKEN: ${{ github.token }}
      - name: Run TFLint
        run: tflint --recursive --format compact
